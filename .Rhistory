s1s = matrix(nrow = N, ncol = J)
s2s = matrix(nrow = N, ncol = J)
for (menu in 1:numMenus) {
df = data.frame(Subj = NULL, Trial = NULL, Trial_unique = NULL, OptionID = NULL, Choice = NULL, X1 = NULL, X2 = NULL, X3 = NULL)
#rho <- -0.75
#Cor <- array(c(1, rho, rho, 1), dim=c(2,2))
s1 = c(1, 1, 3, 3, 3, 4, 6, 6, 7, 10, 14, 15)
s2 = c(12, 22, 21, 13, 14, 18, 15, 9, 11, 7, 5, 6)
# s1 = c(2, 2, 2,  4,  6,  6,  7,  9, 10, 10, 11, 12)
# s2 = c(24, 21, 19, 18, 16, 13, 12, 11,  8,  6,  4, 2)
for (subj in 1:N) {
# # Y = rmvnorm(12, sigma=Cor)
# #s1 = round(pnorm(Y[,1]) * 14 + 1)
# #s2 = round(pnorm(Y[,2]) * 24 + 1)
s1s[subj,] = s1
s2s[subj,] = s2
b1 = rgamma(1, 1.5, bstd)
b2 = rgamma(1, 10, bstd)
b3 = 0
betas = c(b1, b2, b3)
recall = as.logical(round(runif(J))) #+ .1 * (s1 > median(s1)) + .1 * (s2 > median(s2))))
recall[sample(J, J)] = T
#recall[which.max(s1)] = F
recalled.words = which(recall)
num.recalled = sum(recall)
s1_temp = s1
cond = 'normal'
if (runif(1) < .5) {
s1_temp = max(s1_temp) + 1 - s1_temp
cond = 'reversed'
}
x1 = s1_temp[recall]
x2 = s2[recall]
x3 = x1 * x2
SS = sample(2:5,1)
if (SS > num.recalled) {
SS = num.recalled
}
for (trial in 1:K) {
attributes = matrix(c(x1 / max(x1),x2 / max(x2),x3 / max(x3)), nrow = 3, ncol = num.recalled, byrow = T)
probs = exp(betas %*% attributes) / sum(exp(betas %*% attributes))
choice.mix = sample(recalled.words, 1, F, probs)
# (1) get sample!
probs1 = exp(b1 * x1 / max(x1)) / sum(exp(b1 * x1 / max(x1)))
s = sample(num.recalled, SS, F, probs1)
# (2) choose
probs2 = exp(b2 * x2[s] / max(x2[s])) / sum(exp(b2 * x2[s] / max(x2[s])))
choice.cs = recalled.words[sample(s, 1, T, probs2)]
#choice = s[which.max(x2[s])]
for (alt in 1:num.recalled) {
x1_rank = rank(x1, ties.method = 'max')
df = rbind(df, data.frame(Subj = subj, Trial_unique = paste(subj, trial, sep="_"),
OptionID = alt, Choice.cs = choice.cs == recalled.words[alt], Choice.mix = choice.mix == recalled.words[alt],
MFval = x1[alt], MBval = x2[alt], MFhigh = factor(x1[alt] > median(s1_temp), c(T,F), c('high','low')),
MFrank = x1_rank[alt],
Cond = factor(cond, c('normal', 'reversed'), c('normal', 'reversed'))))
}
}
}
df = df %>% mutate(Total = 1.5 * MFval / max(s1) + 10 * MBval / max(s2), #Cond = as.numeric(Cond),
MBval.exp = MBval^2, Total.exp = exp(Total))
df.cs = mlogit.data(df %>% filter(Cond == 'normal'), choice = "Choice.cs", shape = "long", alt.var = "OptionID", chid.var = "Trial_unique")
df.mix = mlogit.data(df %>% filter(Cond == 'reversed'), choice = "Choice.mix", shape = "long", alt.var = "OptionID", chid.var = "Trial_unique")
m.cs = mlogit(Choice.cs ~ MFval * MBval | -1, df.cs)
summary(m.cs)
m.mix = mlogit(Choice.mix ~ MFval * MBval | -1, df.mix)
summary(m.mix)
ps.cs[menu,1] = summary(m.cs)$CoefTable[3,4]
ps.mix[menu,1] = summary(m.mix)$CoefTable[3,4]
coefs.cs[menu,1] = m.cs$coefficients[3]
coefs.mix[menu,1] = m.mix$coefficients[3]
df.sum = df %>% mutate(MFval = MFhigh) %>%
group_by(Cond, MFval,MBval,Subj) %>% summarize(Choice = any(Choice.cs)) %>%
group_by(Cond, MFval,MBval) %>%
summarize(Choice.mean = mean(Choice), Choice.se = sqrt(Choice.mean * (1 - Choice.mean) / n()))
ggplot(data = df.sum, aes(x = MBval, y = Choice.mean, colour = MFval, group = MFval)) +
geom_point(aes(size = 2)) + geom_line() +
geom_errorbar(aes(ymin=Choice.mean - Choice.se, ymax = Choice.mean + Choice.se), width = .2) +
guides(size = FALSE) + facet_wrap(~Cond)
#
# ggplot(data = df.sum, aes(x = MBval, y = Choice.log, colour = MFval, group = MFval)) +
#   geom_point(aes(size = 2)) + geom_line() +
#   geom_errorbar(aes(ymin=Choice.log - Choice.se, ymax = Choice.log + Choice.se), width = .2) +
#   guides(size = FALSE)
df.total = df %>% mutate(Total = MBval) %>%
group_by(Cond, Total, Subj) %>%
summarize(Choice.cs = any(Choice.cs), Choice.mix = any(Choice.mix)) %>%
group_by(Cond, Total) %>%
summarize(Choice.cs.m = mean(Choice.cs), Choice.mix.m = mean(Choice.mix))
ggplot(data = df.total, aes(x = Total, y = Choice.cs.m)) +
geom_point(aes(size = 2)) + geom_line() +
#geom_errorbar(aes(ymin=Choice.cs - Choice.se, ymax = Choice.mean + Choice.se), width = .2) +
guides(size = FALSE) + facet_wrap(~Cond)
m.cs.total = summary(lm(Choice.cs.m ~ exp(MBval) * Cond, data = df.total))
coefs.cs[menu,2] = m.cs.total$coefficients[4,1]
ps.cs[menu,2] = m.cs.total$coefficients[4,4]
m.cs.total = summary(mlogit(Choice.cs ~ MBval | -1, df.cs))
# coefs.cs[menu,2] = m.cs.total$coefficients[4]
# ps.cs[menu,2] = m.cs.total$CoefTable[4,4]
m.mix.total = summary(lm(Choice.mix.m ~ exp(MBval) * Cond, data = df.total))
coefs.mix[menu,2] = m.mix.total$coefficients[4,1]
ps.mix[menu,2] = m.mix.total$coefficients[4,4]
m.mix.total = summary(mlogit(Choice.mix ~ MBval | -1, df.mix))
# coefs.mix[menu,2] = m.mix.total$coefficients[4]
# ps.mix[menu,2] = m.mix.total$CoefTable[4,4]
}
View(df.cs)
require(ggstatsplot)
gghistostats(df.cs %>% filter(Choice.cs == T), MFrank)
gghistostats(df %>% filter(Choice.mix == T), MFrank)
gghistostats(df.cs %>% filter(Choice.cs == T), MFrank)
gghistostats(df %>% filter(Choice.cs == T), MFrank)
gghistostats(df %>% filter(Choice.mix == T), MFrank)
m.cs = mlogit(Choice.cs ~ MFval + MBval | -1, df.cs)
summary(m.cs)
m.mix = mlogit(Choice.mix ~ MFval + MBval | -1, df.mix)
summary(m.mix)
# Setup -------------------------------------------------------------------
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(RColorBrewer)
require(BayesFactor)
setwd('/Users/adam/Me/Psychology/Projects/Dezfouli/git')
se <- function(x) {sd(x) / sqrt(length(x))};
dodge <- position_dodge(width=0.9)
# Import data -------------------------------------------------------------
real <- F
rewardsAreProbs <- F
if (real) {
df.demo <- read.csv('Behavioral/1b_fix/v3/real/demo.csv')
subjlist = df.demo$subject
df <- read.csv('Behavioral/1b_fix/v3/real/data.csv') %>% tbl_df %>% filter(subject %in% subjlist) %>% arrange(subject) %>% mutate(round = trial_index)
} else {
df <- read.csv('Simulations/sims/1b_fix/sims_MFMB_MB.csv') %>% tbl_df %>% arrange(subject)
}
## Exclusion
if (real) {
exclude.subj <- as.character(df.demo$subject[(df.demo$reading_time / 60000) < 1])
exclude.subj <- c(exclude.subj, setdiff(as.character(df.demo$subject[df.demo$belief2 != 0 | df.demo$belief3 != 0]), exclude.subj))
exclude.subj <- c(exclude.subj, 'A1MUEKEQQVROE7') # he glitched
df <- df %>% filter(!(as.character(subject) %in% exclude.subj))
}
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject)
) %>%
filter(round != min(round, na.rm = T))
if (real | !rewardsAreProbs) {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf >= 0, c(T,F), c("+", "-")))
} else {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-")))
}
df.crits = df.crits %>% mutate(
stay1.fac.num = as.numeric(stay1.fac),
stay2.fac.num = as.numeric(stay2.fac),
last.reinf.fac.num = as.numeric(last.reinf.fac),
last.common.num = as.numeric(last.common)
)
if (real) {
df.crits = df.crits %>%
filter(practice != 1 & timeouts == 0)
}
# Import data -------------------------------------------------------------
real <- T
rewardsAreProbs <- F
if (real) {
df.demo <- read.csv('Behavioral/1b_fix/v3/real/demo.csv')
subjlist = df.demo$subject
df <- read.csv('Behavioral/1b_fix/v3/real/data.csv') %>% tbl_df %>% filter(subject %in% subjlist) %>% arrange(subject) %>% mutate(round = trial_index)
} else {
df <- read.csv('Simulations/sims/1b_fix/sims_MFMB_MB.csv') %>% tbl_df %>% arrange(subject)
}
## Exclusion
if (real) {
exclude.subj <- as.character(df.demo$subject[(df.demo$reading_time / 60000) < 1])
exclude.subj <- c(exclude.subj, setdiff(as.character(df.demo$subject[df.demo$belief2 != 0 | df.demo$belief3 != 0]), exclude.subj))
exclude.subj <- c(exclude.subj, 'A1MUEKEQQVROE7') # he glitched
df <- df %>% filter(!(as.character(subject) %in% exclude.subj))
}
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject)
) %>%
filter(round != min(round, na.rm = T))
if (real | !rewardsAreProbs) {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf >= 0, c(T,F), c("+", "-")))
} else {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-")))
}
df.crits = df.crits %>% mutate(
stay1.fac.num = as.numeric(stay1.fac),
stay2.fac.num = as.numeric(stay2.fac),
last.reinf.fac.num = as.numeric(last.reinf.fac),
last.common.num = as.numeric(last.common)
)
if (real) {
df.crits = df.crits %>%
filter(practice != 1 & timeouts == 0)
}
length(unique(df.crits$subject))
# Plot
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
coord_cartesian(ylim=c(0,1))
# Plot
df.bysubj <- df.crits %>%
filter(last.common == 'Rare') %>%
group_by(last.reinf.fac, subject) %>%
summarize(stay1 = mean(stay1))
df.agg <- df.bysubj %>%
summarize(stay1.mean = mean(stay1), stay1.se = se(stay1))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay1.mean, fill = last.reinf.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay1.mean + stay1.se, ymin = stay1.mean - stay1.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "")+coord_cartesian(ylim=c(0,1))+
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(color = 'white', fill = NA))
# Models
model.daw.mm <- glmer(stay1 ~ last.reinf.fac + (1 + last.reinf.fac | subject), family = binomial,
data = df.crits %>% filter(last.common == 'Rare'), contrasts = list(last.reinf.fac = contr.sum))
summary(model.daw.mm)
# Plot
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
coord_cartesian(ylim=c(0,1))
# Model
model.test2 <- glmer(stay2 ~ stay1.fac * last.reinf.fac + (1 + stay1.fac * last.reinf.fac | subject), data = df.crits,
family = binomial, contrasts = list(last.reinf.fac = contr.sum, stay1.fac = contr.sum))
summary(model.test2)
## Test 3: Stay2 ~ Stay1 x Last.Reinf | Different S2, Last Rare
# Plot
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Rare') %>%
group_by(stay1.fac, last.reinf.fac, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
labs(x = "", y = "") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
coord_cartesian(ylim=c(0,1))
# Model
model.test3.mm <- glmer(stay2 ~ stay1.fac * last.reinf.fac + (1 + stay1.fac * last.reinf.fac | subject), family = binomial,
data = df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Rare'),
contrasts = list(last.reinf.fac = contr.sum, stay1.fac = contr.sum))
summary(model.test3.mm)
anovaBF(stay2 ~ stay1.fac * last.reinf.fac, data = df.bysubj, whichModels = "top")
# have to convert factors to numerical versions for this one to get around lmer bug w/ uncorrelated factor random variables
model.test4.mm <- glmer(stay2 ~ stay1.fac.num * last.reinf.fac.num * last.common.num + (stay1.fac.num*last.reinf.fac.num*last.common.num||subject), family = binomial,
data = df.crits %>% filter(sameS2 == 'Different S2'))
summary(model.test4.mm)
model.rt.common = lmer(rt2 ~ stay1.fac.num * stay2.fac.num * last.reinf.fac.num + (stay1.fac.num * stay2.fac.num * last.reinf.fac.num || subject),
data = df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Common'))
summary(model.rt.common)
model.rt.rare = lmer(rt2 ~ stay1.fac.num * stay2.fac.num * last.reinf.fac.num + (stay1.fac.num * stay2.fac.num * last.reinf.fac.num || subject),
data = df.crits %>% filter(sameS2 == 'Different S2' & last.common == 'Rare'))
summary(model.rt.rare)
model.rt = lmer(rt2 ~ stay1.fac.num * stay2.fac.num * last.reinf.fac.num * last.common.num + (stay1.fac.num * stay2.fac.num * last.reinf.fac.num * last.common.num || subject),
data = df.crits %>% filter(sameS2 == 'Different S2'))
summary(model.rt)
summary(model.rt.rare)
summary(model.rt.common)
summary(model.rt)
# After common
df.bysubj <- df.crits %>% filter(last.reinf.fac != '0' & sameS2 == 'Different S2' & last.common == 'Common') %>%
group_by(stay1.fac, last.reinf.fac, stay2.fac, subject) %>%
summarize(rt2 = mean(rt2))
df.agg <- df.bysubj %>%
summarize(rt2.mean = mean(rt2), rt2.se = se(rt2))
ggplot(df.agg, aes(x = stay1.fac, y = rt2.mean, group = stay2.fac, fill = stay2.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = rt2.mean + rt2.se, ymin = rt2.mean - rt2.se), width = .5, position = dodge) +
guides(fill = guide_legend(title = "Stage 2 choice")) +
labs(x = "", y = "RT of action 2") +
facet_wrap(~ last.reinf.fac)
summary(model.rt)
if (real) {
write.table(df.crits %>% select(Action1, S2, Action2, Re, subject_id), 'Behavioral/1b_fix/v3/real/data_fitting.csv',
row.names = F, col.names = F, sep = ",")
}
save.image('Behavioral/1b_fix/v3/real/analysis.RData')
save.image('Behavioral/1b_fix/v3/real/analysis.RData')
# Import data -------------------------------------------------------------
real <- T
rewardsAreProbs <- F
if (real) {
df.demo <- read.csv('Behavioral/1b_fix/v3/real/demo.csv')
subjlist = df.demo$subject
df <- read.csv('Behavioral/1b_fix/v3/real/data.csv') %>% tbl_df %>% filter(subject %in% subjlist) %>% arrange(subject) %>% mutate(round = trial_index)
} else {
df <- read.csv('Simulations/sims/1b_fix/sims_MFMB_MB.csv') %>% tbl_df %>% arrange(subject)
}
## Exclusion
if (real) {
exclude.subj <- as.character(df.demo$subject[(df.demo$reading_time / 60000) < 1])
exclude.subj <- c(exclude.subj, setdiff(as.character(df.demo$subject[df.demo$belief2 != 0 | df.demo$belief3 != 0]), exclude.subj))
#exclude.subj <- c(exclude.subj, 'A1MUEKEQQVROE7') # he glitched
df <- df %>% filter(!(as.character(subject) %in% exclude.subj))
}
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject)
) %>%
filter(round != min(round, na.rm = T))
if (real | !rewardsAreProbs) {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf >= 0, c(T,F), c("+", "-")))
} else {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-")))
}
df.crits = df.crits %>% mutate(
stay1.fac.num = as.numeric(stay1.fac),
stay2.fac.num = as.numeric(stay2.fac),
last.reinf.fac.num = as.numeric(last.reinf.fac),
last.common.num = as.numeric(last.common)
)
if (real) {
df.crits = df.crits %>%
filter(practice != 1 & timeouts == 0)
}
if (real) {
write.table(df.crits %>% select(Action1, S2, Action2, Re, subject_id), 'Behavioral/1b_fix/v3/real/data_fitting.csv',
row.names = F, col.names = F, sep = ",")
}
View(df.crits)
rm(list=ls())
# Import data -------------------------------------------------------------
real <- T
rewardsAreProbs <- F
if (real) {
df.demo <- read.csv('Behavioral/1b_fix/v3/real/demo.csv')
subjlist = df.demo$subject
df <- read.csv('Behavioral/1b_fix/v3/real/data.csv') %>% tbl_df %>% filter(subject %in% subjlist) %>% arrange(subject) %>% mutate(round = trial_index)
} else {
df <- read.csv('Simulations/sims/1b_fix/sims_MFMB_MB.csv') %>% tbl_df %>% arrange(subject)
}
## Exclusion
if (real) {
exclude.subj <- as.character(df.demo$subject[(df.demo$reading_time / 60000) < 1])
exclude.subj <- c(exclude.subj, setdiff(as.character(df.demo$subject[df.demo$belief2 != 0 | df.demo$belief3 != 0]), exclude.subj))
exclude.subj <- c(exclude.subj, 'A1MUEKEQQVROE7') # he glitched
df <- df %>% filter(!(as.character(subject) %in% exclude.subj))
}
df.crits <- df %>%
mutate(
last.common = factor(lag(S2) == (lag(Action1) + 1), c(T, F), c('Common', 'Rare')),
sameS2 = factor(lag(S2) == S2, c(T, F), c("Same S2", "Different S2")),
stay1 = Action1 == lag(Action1),
stay2 = Action2 == lag(Action2),
stay1.fac = factor(Action1 == lag(Action1), c(T, F), c("Same action1", "Different action1")),
stay2.fac = factor(Action2 == lag(Action2), c(T, F), c("Same action2", "Different action2")),
last.reinf = lag(Re),
subject_id = as.numeric(subject)
) %>%
filter(round != min(round, na.rm = T))
if (real | !rewardsAreProbs) {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf >= 0, c(T,F), c("+", "-")))
} else {
df.crits = df.crits %>% mutate(last.reinf.fac = factor(last.reinf > 0, c(T,F), c("+", "-")))
}
df.crits = df.crits %>% mutate(
stay1.fac.num = as.numeric(stay1.fac),
stay2.fac.num = as.numeric(stay2.fac),
last.reinf.fac.num = as.numeric(last.reinf.fac),
last.common.num = as.numeric(last.common)
)
if (real) {
df.crits = df.crits %>%
filter(practice != 1 & timeouts == 0)
}
mfers = c(1,2,5,9,13,14,21,24,25,26,30,31,32,33,36,37,38,47,48,49,50,51,52,53,54,57,59,60,62,63,64,68,70,73,75,76,77,78,79,80,82,84,85,90,92,95,96,99,100,101,102,105,107,111,112,113,116,117,118,119,125,126,127,138,141,142,143,144,145,146,148,149,150,151,157,158,159,161,162,164,166,167,170,171,181,182,183,186,189,192,194,197)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2') %>%
group_by(stay1.fac, last.reinf.fac, last.common, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
#labs(x = "", y = "") +
theme(#axis.text.x = element_blank(), axis.ticks.x = element_blank(),
#axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~ last.common) +
ylim(0,1)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2') %>%
group_by(stay1.fac, last.reinf.fac, last.common, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
# Setup -------------------------------------------------------------------
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(RColorBrewer)
require(BayesFactor)
setwd('/Users/adam/Me/Psychology/Projects/Dezfouli/git')
se <- function(x) {sd(x) / sqrt(length(x))};
dodge <- position_dodge(width=0.9)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2') %>%
group_by(stay1.fac, last.reinf.fac, last.common, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
#labs(x = "", y = "") +
theme(#axis.text.x = element_blank(), axis.ticks.x = element_blank(),
#axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~ last.common) +
ylim(0,1)
mfers = c(1,2,5,9,13,14,21,24,25,26,30,31,32,33,36,37,38,47,48,49,50,51,52,53,54,57,59,60,62,63,64,68,70,73,75,76,77,78,79,80,82,84,85,90,92,95,96,99,100,101,102,105,107,111,112,113,116,117,118,119,125,126,127,138,141,142,143,144,145,146,148,149,150,151,157,158,159,161,162,164,166,167,170,171,181,182,183,186,189,192,194,197)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2', !(subject_id %in% mfers)) %>%
group_by(stay1.fac, last.reinf.fac, last.common, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
#labs(x = "", y = "") +
theme(#axis.text.x = element_blank(), axis.ticks.x = element_blank(),
#axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~ last.common) +
ylim(0,1)
df.bysubj <- df.crits %>% filter(sameS2 == 'Different S2', (subject_id %in% mfers)) %>%
group_by(stay1.fac, last.reinf.fac, last.common, subject) %>%
summarize(stay2 = mean(stay2))
df.agg <- df.bysubj %>%
summarize(stay2.mean = mean(stay2), stay2.se = se(stay2))
ggplot(df.agg, aes(x = last.reinf.fac, y = stay2.mean, group = stay1.fac, fill = stay1.fac)) +
geom_bar(stat = "identity", position = dodge) +
geom_errorbar(aes(ymax = stay2.mean + stay2.se, ymin = stay2.mean - stay2.se), width = .5, position = dodge) +
guides(fill = F) +
#labs(x = "", y = "") +
theme(#axis.text.x = element_blank(), axis.ticks.x = element_blank(),
#axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 2),
panel.background = element_rect(colour = "white", fill = NA)) +
scale_fill_manual(values = c("Same action1" = "#3D9970", "Different action1" = "brown")) +
facet_wrap(~ last.common) +
ylim(0,1)
